/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Main;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author Pavel
 */
public class MyChatServer extends javax.swing.JFrame implements Runnable{

    String sent="",recieved=null;
    ObjectInputStream ois=null;
    ObjectOutputStream oos=null;
    BufferedReader br=null;
    ServerSocket s=null;
    
    public MyChatServer() {
        initComponents();
        run();
    }
    
    public void run(){
        try{
            //1. Create a server socket
            s=new ServerSocket(3333);
            System.out.println("Client-Server Chat \n-----------------------------------------------------------\nPress Alt+F4 to quit this application.");
            JTA.setText("\nWaiting for connection from Client");
            //2. Wait for connection
            
            System.out.println("\nWaiting for connection from Client");
            Socket connection=s.accept();
            JTA.setText("Connection received from "+connection.getInetAddress().getHostName()+":"+connection.getInetAddress());
            JTA.setText("Waiting for response...");
            System.out.println("Connection received from "+connection.getInetAddress().getHostName()+":"+connection.getInetAddress());
            System.out.println("Waiting for response.. ");


            //3. Get Input and Output streams
            oos=new ObjectOutputStream(connection.getOutputStream());
            oos.flush();
            ois=new ObjectInputStream(connection.getInputStream());

            br=new BufferedReader(new InputStreamReader(System.in));
            
            while(true){
                    receiveMessage();

                    System.out.println("Enter message: ");					
                    sendMessage();

                    System.out.println("Waiting for response.. ");
            }
        }catch(Exception e){
            System.out.println(e);
        }	

    }
    
    void receiveMessage(){
        try{
            recieved=(String)ois.readObject();
            System.out.println("\nClient->");
            System.out.println(recieved);
        }catch(Exception e){
            System.out.println(e);
        }
		
    }

    void sendMessage(){
        try{
            System.out.println("(Type y and press enter to terminate the message)");
            String temp=null;
            sent="";

            while(true){
                    temp=br.readLine();
                    if(temp.equalsIgnoreCase("y"))
                            break;
                    else
                            sent=sent+temp+"\n";

            } 
            oos.writeObject(sent);
            oos.flush();
        }catch(Exception e){
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JTA = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTP = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JTA.setColumns(20);
        JTA.setRows(5);
        jScrollPane1.setViewportView(JTA);

        jScrollPane2.setViewportView(JTP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyChatServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyChatServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyChatServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyChatServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyChatServer().setVisible(true);
            }
        });
        
        //Thread myThread = new Thread(this);
                
        //MyChatServer server = new MyChatServer();
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea JTA;
    private javax.swing.JTextPane JTP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
